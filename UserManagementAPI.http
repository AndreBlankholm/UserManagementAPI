### Simple User Management API Testing

@baseUrl = https://localhost:7124

### 0. Test home page
GET {{baseUrl}}/

### 1. Get all users (empty initially)
GET {{baseUrl}}/api/users
Authorization: Bearer valid-token-123

### 2. Create first user
POST {{baseUrl}}/api/users
Content-Type: application/json
Authorization: Bearer valid-token-123

{
  "name": "John Doe",
  "title": "Software Developer",
  "email": "john.doe@example.com"
}

### 3. Create second user
POST {{baseUrl}}/api/users
Content-Type: application/json
Authorization: Bearer valid-token-123

{
  "name": "Shalette Harrison",
  "title": "Baby Boss",
  "email": "shalette.harrison@example.com"
}

### 4. Get all users (should show 2 users)
GET {{baseUrl}}/api/users
Authorization: Bearer valid-token-123

### 5. Get specific user by ID
GET {{baseUrl}}/api/users/1
Authorization: Bearer valid-token-123

### 6. Update user
PUT {{baseUrl}}/api/users/1
Content-Type: application/json
Authorization: Bearer valid-token-123

{
  "name": "John Updated",
  "title": "Senior Developer",
  "email": "john.updated@example.com"
}

### 7. Get updated user
GET {{baseUrl}}/api/users/1
Authorization: Bearer valid-token-123

### 8. Delete user
DELETE {{baseUrl}}/api/users/2
Authorization: Bearer valid-token-123

### 9. Get all users after deletion
GET {{baseUrl}}/api/users
Authorization: Bearer valid-token-123

### 10. Try to get deleted user (should return 404)
GET {{baseUrl}}/api/users/2
Authorization: Bearer valid-token-123

### 11. Test unauthorized access (should return 401)
GET {{baseUrl}}/api/users

### 12. Test invalid token (should return 401)
GET {{baseUrl}}/api/users
Authorization: Bearer invalid-token
